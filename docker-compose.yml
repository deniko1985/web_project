version: "3.9"

services:
  web_project:
    container_name: web_project
    hostname: app
    user: '1000:1000'
    restart: always
    build: 
      context: ./app/
      network: host
    networks:
      - web_project-network
    volumes:
      - ./app/:/app/
    ports:
      - 5001:5001
    depends_on:
      - postgres
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
          constraints: [node.hostname == web_app]

  postgres:
    image: postgres:15.2
    container_name: postgres
    hostname: postgres
    restart: always
    networks:
      - web_project-network
    environment:
      # POSTGRES_DB: "web_project"
      # POSTGRES_USER: "postgres"
      # POSTGRES_PASSWORD: "postgres"
      # POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
          constraints: [node.hostname == web_app]


networks:
  web_project-network:
    driver: bridge
