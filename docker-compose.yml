version: "3.9"

services:
  backend:
    container_name: web_project_backend
    hostname: backend
    user: '1000:1000'
    restart: unless-stopped
    build: 
      context: ./backend/
      network: host
    networks:
      - web_project-network
    environment:
      - CACHE_URL=redis://redis:6381/1
    volumes:
      - ./backend/:/backend/
      - ./nltk_data/:/home/appuser/nltk_data/
    ports:
      - 6002:6002

  # frontend:
  #   container_name: web_project_frontend
  #   hostname: frontend
  #   restart: unless-stopped
  #   build: 
  #     context: ./frontend/
  #     network: host
  #   networks:
  #     - web_project-network
  #   volumes:
  #     - ./frontend/src/:/var/www
  #     - ./frontend/nginx.conf:/etc/nginx/nginx.conf
  #     - ./frontend/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./frontend/logs:/var/log/nginx
  #   ports:
  #     - 6001:6001

  db:
    image: postgres:15.2
    container_name: web_project_postgres
    hostname: postgres
    restart: unless-stopped
    networks:
      - web_project-network
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data/
    command:
      - -p 6003
    ports:
      - 6003:6003
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres web_project"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build: ./backend
    container_name: web_project_worker
    command: celery -A worker.celery worker --loglevel=info --logfile=logs/celery.log
    networks:
      - web_project-network
    volumes:
      - ./backend:/usr/src/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6381/0
      - CELERY_RESULT_BACKEND=redis://redis:6381/0
    depends_on:
      - backend
      - redis

  redis:
    image: redis:latest
    container_name: web_project_redis
    restart: always
    networks:
      - web_project-network
    ports:
      - 6381:6381
    command: [ "redis-server", "--port 6381" ]

  dashboard:
    build: ./backend
    container_name: web_project_dashboard
    command: celery --broker=redis://redis:6381/0 flower --port=5555
    networks:
      - web_project-network
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6381/0
      - CELERY_RESULT_BACKEND=redis://redis:6381/0
    depends_on:
      - backend
      - redis
      - worker

networks:
  web_project-network:
    driver: bridge
